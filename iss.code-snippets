{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Iss-Vue-Leaflet-html-map": {
		"prefix": "iss-vue-leaflet-html-map",
		"body": [
			"<div style=\"height:100%\">",
			"\t<l-map v-if=\"marker.lat\" :zoom=\"4\" :center=\"marker\">",
			"\t\t<l-tile-layer :url=\"'http://{s}.tile.osm.org/{z}/{x}/{y}.png'\"></l-tile-layer>",
			"\t\t<l-marker :lat-lng=\"marker\"></l-marker>",
			"\t</l-map>",
			"</div>"
		],
		"description": "Insert vue2-leafet map markups with a marker"
	},
	"Iss-Vue-youtube-embed": {
		"prefix": "iss-vue-youtube-embed",
		"body": [
			"<div style=\"height:100%\">",
			"\t<iframe width=\"720\" height=\"405\"",
			"\t\tsrc=\"https://www.youtube.com/embed/uj3FqkflC7g?autoplay=1\" frameborder=\"0\"",
			"\t\tallow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"></iframe>",
			"</div>"
		],
		"description": "Insert NASA youtube video"
	},
	"Iss-Vue-Leaflet-css": {
		"prefix": "iss-vue-leaflet-css-import",
		"body": [
			"<link rel=\"stylesheet\" href=\"//unpkg.com/leaflet/dist/leaflet.css\">"
		],
		"description": "Insert leaflet css"
	},
	"Iss-Vue-leaflet-ts-components": {
		"prefix": "iss-vue-leaflet-ts-components",
		"body": [
			"({",
			"\tcomponents : { LMap, LTileLayer, LMarker }",
			"})"
		],
		"description": "Inject vue2leaflet components declaration"
	},
	"Iss-Vue-leaflet-ts-component-imports": {
		"prefix": "iss-vue-leaflet-ts-imports",
		"body": [
			"import { LMap, LTileLayer, LMarker } from 'vue2-leaflet';",
			"import L from 'leaflet';",
			"import axios from 'axios';"
		],
		"description": "Inject vue2leaflet & axios imports"
	},
	"Iss-Vue-leaflet-ts-created": {
		"prefix": "iss-vue-leaflet-ts-created",
		"body": [
			"public marker: L.LatLng = L.latLng(0, 0);",
			"",
			"created() {",
			"\tsetInterval(() => {",
			"\t\taxios.get('api/iss').then(res => {",
			"\t\t\tthis.marker = L.latLng(parseFloat(res.data.latitude), parseFloat(res.data.longitude));",
			"\t\t});",
			"\t}, 3000);",
			"}"
		],
		"description": "Insert ts component part for vue2leaflet"
	},
	"Iss-Java-position-controller": {
		"prefix": "iss-java-position-controller",
		"body": [
			"package com.mycompany.myapp.web.rest;",
			"",
			"import org.springframework.web.bind.annotation.GetMapping;",
			"import org.springframework.web.bind.annotation.RestController;",
			"import org.springframework.web.client.RestTemplate;",
			"",
			"class ISSPosition {",
			"    public double longitude;",
			"    public double latitude;",
			"}",
			"",
			"@RestController",
			"public class ISSPositionResource {",
			"",
			"    @GetMapping(\"api/iss\")",
			"    public ISSPosition retrieveISSPosition() {",
			"        return new RestTemplate().getForObject(\"https://api.wheretheiss.at/v1/satellites/25544\", ISSPosition.class);",
			"    }",
			"",
			"}"
		],
		"description": "ISS Position REST endpoint"
	}
}